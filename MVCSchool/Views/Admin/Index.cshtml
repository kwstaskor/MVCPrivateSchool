@model MVCSchool.Models.ViewModels.AdminViewModel
@using PagedList.Mvc;

<div class="row">
    @*Courses*@
    <div class="col-md-6">
        <h2 class="m-4 text-center">Courses</h2>

        <div class="container pull-left mt-1 mb-1">
            <div class="input-group rounded">
                @using (@Html.BeginForm("Index", "Admin", FormMethod.Get, new { @class = "form-inline" }))
                {
                    @Html.TextBox("searchByNameC", null, new { @class = "form-control", placeholder = "Search", type = "search" })
                    <input type="hidden" name="sortOrder" value="ViewBag.CurrentSortOrder" />

                    <input class="btn btn-sm btn-outline-success m-1" type="submit" value="Search" />
                    <input id="resetButtonC" class="btn btn-sm btn-outline-secondary  m-1" type="button" value="Reset" />
                }
            </div>
        </div>

        <div class="table-responsive">
            <table class="table table-bordered table-hover table-light table-striped text-center">
                <thead class="thead-dark">
                    <tr>
                        <th>
                            @Html.ActionLink("Title", "Index", "Admin", new { sortOrder = ViewBag.TitleCSort, searchByNameC = ViewBag.CurrentNameC }, new { style = "text-decoration:none" })

                        </th>
                        <th>
                            @Html.ActionLink("Stream", "Index", "Admin", new { sortOrder = ViewBag.StreamSort, searchByNameC = ViewBag.CurrentNameC }, new { style = "text-decoration:none" })
                        </th>
                        <th>
                            @Html.ActionLink("Type", "Index", "Admin", new { sortOrder = ViewBag.TypeSort, searchByNameC = ViewBag.CurrentNameC }, new { style = "text-decoration:none" })
                        </th>
                        <th>
                            @Html.ActionLink("Start Date", "Index", "Admin", new { sortOrder = ViewBag.SdSort, searchByNameC = ViewBag.CurrentNameC }, new { style = "text-decoration:none" })
                        </th>
                        <th>
                            @Html.ActionLink("End Date", "Index", "Admin", new { sortOrder = ViewBag.EdSort, searchByNameC = ViewBag.CurrentNameC }, new { style = "text-decoration:none" })
                        </th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var course in Model.PagedCourses)
                    {
                        <tr id="@course.CourseId">
                            <td>@course.Title</td>
                            <td>@course.Stream</td>
                            <td>@course.Type</td>
                            <td>@course.StartDate.ToString("yyyy MMMM dd")</td>
                            <td>@course.EndDate.ToString("yyyy MMMM dd")</td>
                            <td>
                                @Html.ActionLink("Info", "Details", "Course", new { id = course.CourseId }, new { @class = "btn btn-sm btn-outline-info m-1" })
                                @Html.ActionLink("Edit", "Edit", "Course", new { id = course.CourseId }, new { @class = "btn btn-sm btn-success m-1" })
                                @Html.ActionLink("Delete", "Delete", "Course", new { id = course.CourseId }, new { @class = "btn btn-sm btn-danger m-1" })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            Page @(Model.PagedCourses.PageCount < Model.PagedCourses.PageNumber ? 0 : Model.PagedCourses.PageNumber) of @Model.PagedCourses.PageCount
            @Html.PagedListPager(Model.PagedCourses, x => @Url.Action("Index", "Admin", new { pageC = x }), PagedListRenderOptions.TwitterBootstrapPager)


            @Html.ActionLink("Add Course", "Create", "Course", null, new { @class = "btn btn-sm btn-primary m-1 pull-right" })
        </div>
    </div>

    @*Assignments*@
    <div class="col-md-6">
        <h2 class="m-4 text-center">Assignments</h2>

        <div class="container pull-left mt-1 mb-1">
            <div class="input-group rounded">
                @using (@Html.BeginForm("Index", "Admin", FormMethod.Get, new { @class = "form-inline" }))
                {
                    @Html.TextBox("searchByNameA", null, new { @class = "form-control", placeholder = "Search", type = "search" })
                    <input type="hidden" name="sortOrder" value="ViewBag.CurrentSortOrder" />

                    <input class="btn btn-sm btn-outline-success m-1" type="submit" value="Search" />
                    <input id="resetButtonA" class="btn btn-sm btn-outline-secondary  m-1" type="button" value="Reset" />
                }
            </div>
        </div>

        <div class="table-responsive">
            <table class="table table-bordered table-hover table-light table-striped text-center">
                <thead class="thead-dark">
                    <tr>
                        <th>
                            @Html.ActionLink("Title", "Index", "Admin", new { sortOrder = ViewBag.TitleASort, searchByNameA = ViewBag.CurrentNameA }, new { style = "text-decoration:none" })

                        </th>
                        <th>
                            @Html.ActionLink("Description", "Index", "Admin", new { sortOrder = ViewBag.DescriptionSort, searchByNameA = ViewBag.CurrentNameA }, new { style = "text-decoration:none" })
                        </th>
                        <th>
                            @Html.ActionLink("Submission Date", "Index", "Admin", new { sortOrder = ViewBag.SubmissionSort, searchByNameA = ViewBag.CurrentNameA }, new { style = "text-decoration:none" })
                        </th>
                        <th>
                            @Html.ActionLink("Oral Mark", "Index", "Admin", new { sortOrder = ViewBag.OralSort, searchByNameA = ViewBag.CurrentNameA }, new { style = "text-decoration:none" })
                        </th>
                        <th>
                            @Html.ActionLink("Total Mark", "Index", "Admin", new { sortOrder = ViewBag.TotalSort, searchByNameA = ViewBag.CurrentNameA }, new { style = "text-decoration:none" })
                        </th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var assignment in Model.PagedAssignments)
                    {
                        <tr id="@assignment.AssignmentId">
                            <td>@assignment.Title</td>
                            <td>@assignment.Description</td>
                            <td>@assignment.Submission</td>
                            <td>@assignment.OralMark</td>
                            <td>@assignment.TotalMark</td>
                            <td>
                                @Html.ActionLink("Info", "Details", "Assignment", new { id = assignment.AssignmentId }, new { @class = "btn btn-sm btn-outline-info m-1" })
                                @Html.ActionLink("Edit", "Edit", "Assignment", new { id = assignment.AssignmentId }, new { @class = "btn btn-sm btn-success m-1" })
                                @Html.ActionLink("Delete", "Delete", "Assignment", new { id = assignment.AssignmentId }, new { @class = "btn btn-sm btn-danger m-1" })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            Page @(Model.PagedAssignments.PageCount < Model.PagedAssignments.PageNumber ? 0 : Model.PagedAssignments.PageNumber) of @Model.PagedAssignments.PageCount
            @Html.PagedListPager(Model.PagedAssignments, x => @Url.Action("Index", "Admin", new { pageA = x }), PagedListRenderOptions.TwitterBootstrapPager)

            @Html.ActionLink("Add Assignment", "Create", "Assignment", null, new { @class = "btn btn-sm btn-primary m-1 pull-right" })
        </div>
    </div>

</div>

<hr class="my-4" />

<div class="row">
    @*Students*@
    <div class="col-md-6">
        <h2 class="m-4 text-center">Students</h2>

        <div class="container pull-left mt-1 mb-1">
            <div class="input-group rounded">
                @using (@Html.BeginForm("Index", "Admin", FormMethod.Get, new { @class = "form-inline" }))
                {
                    @Html.TextBox("searchByNameS", null, new { @class = "form-control", placeholder = "Search", type = "search" })
                    <input type="hidden" name="sortOrder" value="ViewBag.CurrentSortOrder" />

                    <input class="btn btn-sm btn-outline-success m-1" type="submit" value="Search" />
                    <input id="resetButtonS" class="btn btn-sm btn-outline-secondary  m-1" type="button" value="Reset" />
                }
            </div>
        </div>

        <div class="table-responsive">
            <table class="table table-bordered table-hover table-light table-striped text-center">
                <thead class="thead-dark">
                    <tr>
                        <th>
                            @Html.ActionLink("First Name", "Index", "Admin", new { sortOrder = ViewBag.FirstNameSSort, searchByNameS = ViewBag.CurrentNameS }, new { style = "text-decoration:none" })
                        </th>
                        <th>
                            @Html.ActionLink("Last Name", "Index", "Admin", new { sortOrder = ViewBag.LastNameSSort, searchByNameS = ViewBag.CurrentNameS }, new { style = "text-decoration:none" })
                        </th>
                        <th>
                            @Html.ActionLink("Date of Birth", "Index", "Admin", new { sortOrder = ViewBag.DoBSSort, searchByNameS = ViewBag.CurrentNameS }, new { style = "text-decoration:none" })
                        </th>
                        <th>
                            @Html.ActionLink("Tuition Fee", "Index", "Admin", new { sortOrder = ViewBag.FeeSSort, searchByNameS = ViewBag.CurrentNameS }, new { style = "text-decoration:none" })
                        </th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var student in Model.PagedStudents)
                    {
                        <tr id="@student.StudentId">
                            <td>@student.FirstName</td>
                            <td>@student.LastName</td>
                            <td>@student.DateOfBirth.ToString("yyyy MMMM dd")</td>
                            <td>@student.TuitionFee &euro;</td>
                            <td>
                                @Html.ActionLink("Info", "Details", "Student", new { id = student.StudentId }, new { @class = "btn btn-sm btn-outline-info m-1" })
                                @Html.ActionLink("Edit", "Edit", "Student", new { id = student.StudentId }, new { @class = "btn btn-sm btn-success m-1" })
                                @Html.ActionLink("Delete", "Delete", "Student", new { id = student.StudentId }, new { @class = "btn btn-sm btn-danger m-1" })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            Page @(Model.PagedStudents.PageCount < Model.PagedStudents.PageNumber ? 0 : Model.PagedStudents.PageNumber) of @Model.PagedStudents.PageCount
            @Html.PagedListPager(Model.PagedStudents, x => @Url.Action("Index", "Admin", new { pageS = x }), PagedListRenderOptions.TwitterBootstrapPager)

            @Html.ActionLink("Add Student", "Create", "Student", null, new { @class = "btn btn-sm btn-primary m-1 pull-right" })
        </div>
    </div>

    @*Trainers*@
    <div class="col-md-6">
        <h2 class="m-4 text-center">Trainers</h2>

        <div class="container pull-left mt-1 mb-1">
            <div class="input-group rounded">
                @using (@Html.BeginForm("Index", "Admin", FormMethod.Get, new { @class = "form-inline" }))
                {
                    @Html.TextBox("searchByNameT", null, new { @class = "form-control", placeholder = "Search", type = "search" })
                    <input type="hidden" name="sortOrder" value="ViewBag.CurrentSortOrder" />

                    <input class="btn btn-sm btn-outline-success m-1" type="submit" value="Search" />
                    <input id="resetButtonT" class="btn btn-sm btn-outline-secondary  m-1" type="button" value="Reset" />
                }
            </div>
        </div>

        <div class="table-responsive">
            <table class="table table-bordered table-hover table-light table-striped text-center">
                <thead class="thead-dark">
                <tr>
                    <th>
                      Image
                    </th>
                    <th>
                        @Html.ActionLink("First Name", "Index", "Admin", new {sortOrder = ViewBag.FirstNameTSort, searchByNameT = ViewBag.CurrentNameT}, new {style = "text-decoration:none"})
                    </th>
                    <th>
                        @Html.ActionLink("Last Name", "Index", "Admin", new {sortOrder = ViewBag.LastNameTSort, searchByNameT = ViewBag.CurrentNameT}, new {style = "text-decoration:none"})
                    </th>
                    <th>
                        @Html.ActionLink("Subject", "Index", "Admin", new {sortOrder = ViewBag.SubjectSort, searchByNameT = ViewBag.CurrentNameT}, new {style = "text-decoration:none"})
                    </th>
                    <th>
                        Years of Experience
                    </th>
                    <th>Actions</th>
                </tr>
                </thead>
                <tbody>
                    @foreach (var trainer in Model.PagedTrainers)
                    {
                        <tr id="@trainer.TrainerId">
                            <td><img width="70px" src="@trainer.PhotoUrl"/> </td>
                            <td>@trainer.FirstName</td>
                            <td>@trainer.LastName</td>
                            <td>@trainer.Subject</td>
                            <td>@trainer.YearsOfExperience</td>
                            <td>
                                @Html.ActionLink("Info", "Details", "Trainer", new {id = trainer.TrainerId}, new {@class = "btn btn-sm btn-outline-info m-1"})
                                @Html.ActionLink("Edit", "Edit", "Trainer", new {id = trainer.TrainerId}, new {@class = "btn btn-sm btn-success m-1"})
                                @Html.ActionLink("Delete", "Delete", "Trainer", new {id = trainer.TrainerId}, new {@class = "btn btn-sm btn-danger m-1"})
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            Page @(Model.PagedTrainers.PageCount < Model.PagedTrainers.PageNumber ? 0 : Model.PagedTrainers.PageNumber) of @Model.PagedTrainers.PageCount
            @Html.PagedListPager(Model.PagedTrainers, x => @Url.Action("Index", "Admin", new { pageT = x }), PagedListRenderOptions.TwitterBootstrapPager)

            @Html.ActionLink("Add Trainer", "Create", "Trainer", null, new { @class = "btn btn-sm btn-primary m-1 pull-right" })
        </div>
    </div>
    @*Return Button*@
    <div class="col-md-6">
        <div class="container pull-left">
            @Html.ActionLink("Return", "Index", "Home", null, new { @class = "btn btn-outline-info btn-lg" })
        </div>
    </div>
</div>


@section scripts
{
    <script src="~/Scripts/MyJS/ResetButtons.js"></script>
}