@model MVCSchool.Models.Course
@{
    ViewBag.Title = "Edit";
}


@using (Html.BeginForm("DbEdit", "Course", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="my-form row justify-content-center">
        <div class="col-md-8 text-center">
            <div class="card">

                <div class="card-header">
                    <h6 class="text-center">Edit Course</h6>
                </div>

                @Html.HiddenFor(c => c.CourseId)

            <div class="card-body">

                <div class="form-group">
                    @Html.LabelFor(c => c.Title, new { htmlAttributes = new { @class = "col-md-4 col-form-label text-md-right" } }) <strong style="color:#b22222">*</strong>
                    <div class="col-md-6 offset-md-3">
                        @Html.EditorFor(c => c.Title, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                        @Html.ValidationMessageFor(c => c.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(c => c.Stream, new { htmlAttributes = new { @class = "col-md-4 col-form-label text-md-right" } }) <strong style="color:#b22222">*</strong>
                    <div class="col-md-6 offset-md-3">
                        @Html.EditorFor(c => c.Stream, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                        @Html.ValidationMessageFor(c => c.Stream, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(c => c.Type, new { htmlAttributes = new { @class = "col-md-4 col-form-label text-md-right" } }) <strong style="color:#b22222">*</strong>
                    <div class="col-md-6 offset-md-3">
                        @Html.EditorFor(c => c.Type, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                        @Html.ValidationMessageFor(c => c.Type, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(c => c.StartDate, new { htmlAttributes = new { @class = "col-md-4 col-form-label text-md-right" } }) <strong style="color:#b22222">*</strong>
                    <div class="col-md-6 offset-md-3">
                        @Html.EditorFor(c => c.StartDate, new { htmlAttributes = new { @class = "form-control", min = DateTime.Now.Year - 1 } })
                        @Html.ValidationMessageFor(c => c.StartDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(c => c.EndDate, new { htmlAttributes = new { @class = "col-md-4 col-form-label text-md-right" } }) <strong style="color:#b22222">*</strong>
                    <div class="col-md-6 offset-md-3">
                        @Html.EditorFor(c => c.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(c => c.EndDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                
                @if (Model.Students.Count > 0 && Model.Students.Count < 10)
                {
                    <label class="h6">Selected Students</label>
                    <ul class="list-unstyled">
                        @foreach (var student in Model.Students)
                        {
                            <li class="form-check-inline"><i class="fa fa-check-circle-o"> @student.FirstName @student.LastName</i> </li>
                        }
                    </ul>
                }

                <button id="stdEBtn" type="button" class="btn btn-sm btn-primary mb-2">Edit Students</button>

                <div id="editStd" class="form-group mb-5">
                    <label class="col-md-4 col-form-label" for="studentEdit">Students</label>
                    <div class="col-md-6 offset-md-3">
                        @Html.ListBox("studentEdit", null, new { @class = "selectpicker form-control ", multiple = "multiple" })
                    </div>
                </div>

                <br />
                
                @if (Model.Trainers.Count > 0 && Model.Trainers.Count < 8)
                {
                    <label class="h6">Selected Trainers</label>
                    <ul class="list-unstyled">
                        @foreach (var trainer in Model.Trainers)
                        {
                            <li class="form-check-inline"><i class="fa fa-check-circle-o"> @trainer.FirstName @trainer.LastName</i> </li>
                        }
                    </ul>
                }

                <button id="trEBtn" type="button" class="btn btn-sm btn-primary mb-2">Edit Trainers</button>

                <div id="editTr" class="form-group mb-5">
                    <label class="col-md-4 col-form-label" for="trainerEdit">Trainers</label>
                    <div class="col-md-6 offset-md-3">
                        @Html.ListBox("trainerEdit", null, new { @class = "selectpicker form-control ", multiple = "multiple" })
                    </div>
                </div> 
                
                <br />
                
                @if (Model.Assignments.Count > 0 && Model.Assignments.Count < 10)
                {
                    <label class="h6">Selected Assignments</label>
                    <ul class="list-unstyled">
                        @foreach (var assignment in Model.Assignments)
                        {
                            <li class="form-check-inline"><i class="fa fa-check-circle-o"> @assignment.Title</i> </li>
                        }
                    </ul>
                }

                <button id="assEBtn" type="button" class="btn btn-sm btn-primary mb-2">Edit Assignments</button>

                <div id="editAss" class="form-group mb-5">
                    <label class="col-md-4 col-form-label" for="assignmentEdit">Assignments</label>
                    <div class="col-md-6 offset-md-3">
                        @Html.ListBox("assignmentEdit", null, new { @class = "selectpicker form-control ", multiple = "multiple" })
                    </div>
                </div>

                <div class="col-md-6 offset-md-3">
                    <input type="reset" class="btn btn-outline-secondary btn-block" value="Reset" />
                    <input type="submit" class="btn btn-success btn-block" value="Save Changes" />
                </div>

            </div>
            </div>
            @Html.ActionLink("Return", "Index", "Admin", null, new { @class = "btn btn-outline-info btn-sm" })
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/bootstrap-select.min.js"></script>
    <script src="~/Scripts/MyJS/ValidateCourseDates.js"></script>
    <script src="~/Scripts/MyJS/EditBtns.js"></script>
}