@model MVCSchool.Models.Assignment
@{
    ViewBag.Title = "Edit";
}


@using (Html.BeginForm("DbEdit", "Assignment", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="my-form row justify-content-center">
        <div class="col-md-8 text-center">
            <div class="card">

                <div class="card-header">
                    <h6 class="text-center">Edit Assignment</h6>
                </div>

                @Html.HiddenFor(a => a.AssignmentId)

                <div class="card-body">
                    <div class="form-group">
                        @Html.LabelFor(a => a.Title, new { htmlAttributes = new { @class = "col-md-4 col-form-label text-md-right" } }) <strong style="color:#b22222">*</strong>
                        <div class="col-md-6 offset-md-3">
                            @Html.EditorFor(a => a.Title, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            @Html.ValidationMessageFor(a => a.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(a => a.Description, new { htmlAttributes = new { @class = "col-md-4 col-form-label text-md-right" } }) <strong style="color:#b22222">*</strong>
                        <div class="col-md-6 offset-md-3">
                            @Html.EditorFor(a => a.Description, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            @Html.ValidationMessageFor(a => a.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(a => a.Submission, new { htmlAttributes = new { @class = "col-md-4 col-form-label text-md-right" } }) <strong style="color:#b22222">*</strong>
                        <div class="col-md-6 offset-md-3">
                            @Html.EditorFor(a => a.Submission, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", type = "datetime", placeholder = "yyyy-mm-dd hh:mm", min = DateTime.Now.Year - 1 } })
                            @Html.ValidationMessageFor(a => a.Submission, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(a => a.OralMark, new { htmlAttributes = new { @class = "col-md-4 col-form-label text-md-right" } }) <strong style="color:#b22222">*</strong>
                        <div class="col-md-6 offset-md-3">
                            @Html.EditorFor(a => a.OralMark, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            @Html.ValidationMessageFor(a => a.OralMark, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(a => a.TotalMark, new { htmlAttributes = new { @class = "col-md-4 col-form-label text-md-right" } }) <strong style="color:#b22222">*</strong>
                        <div class="col-md-6 offset-md-3">
                            @Html.EditorFor(a => a.TotalMark, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            @Html.ValidationMessageFor(a => a.TotalMark, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @if (Model.Courses.Count > 0 && Model.Courses.Count < 8)
                    {
                        <label class="h6">Selected Courses</label>
                        <ul class="list-unstyled">
                            @foreach (var course in Model.Courses)
                            {
                                <li class="form-check-inline"><i class="fa fa-check-circle-o"> @course.Title</i> </li>
                            }
                        </ul>
                    }

                    <button id="crsEBtn" type="button" class="btn btn-sm btn-primary mb-2">Edit Courses</button>

                    <div id="editCrs" class="form-group mb-5">
                        <label class="col-md-4 col-form-label" for="courseEdit">Courses</label>
                        <div class="col-md-6 offset-md-3">
                            @Html.ListBox("courseEdit", null, new { @class = "selectpicker form-control ", multiple = "multiple" })
                        </div>
                    </div>

                    <br />

                    @if (Model.Students.Count > 0 && Model.Students.Count < 10)
                    {
                        <label class="h6">Selected Students</label>
                        <ul class="list-unstyled">
                            @foreach (var student in Model.Students)
                            {
                                <li class="form-check-inline"><i class="fa fa-check-circle-o"> @student.FirstName @student.LastName</i> </li>
                            }
                        </ul>
                    }

                    <button id="stdEBtn" type="button" class="btn btn-sm btn-primary mb-2">Edit Students</button>

                    <div id="editStd" class="form-group mb-5">
                        <label class="col-md-4 col-form-label" for="studentEdit">Students</label>
                        <div class="col-md-6 offset-md-3">
                            @Html.ListBox("studentEdit", null, new { @class = "selectpicker form-control ", multiple = "multiple" })
                        </div>
                    </div>

                    <div class="col-md-6 offset-md-3">
                        <input type="reset" class="btn btn-outline-secondary btn-block" value="Reset" />
                        <input type="submit" class="btn btn-success btn-block" value="Save Changes" />
                    </div>
                </div>
            </div>
            @Html.ActionLink("Return", "Index", "Admin", null, new { @class = "btn btn-outline-info btn-sm" })
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/bootstrap-select.min.js"></script>
    <script src="~/Scripts/MyJS/EditBtns.js"></script>
}